// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = '2.0.0'
        dokka_version = '1.9.10'
        retrofit_version = '2.11.0'
        okhttp_version = '4.12.0'
        compose_version = '1.6.8'
        moshi_version = '1.15.1'
        kotlin_coroutines_version = '1.9.0-RC'
    }
    repositories {
        google()
        mavenCentral()
        maven {
            url = uri("https://storage.googleapis.com/r8-releases/raw")
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.5.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath("org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version")
        classpath("org.jetbrains.dokka:versioning-plugin:$dokka_version")
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        constraints {
            // Force upgrades of AGP dependencies
            classpath("org.apache.commons:commons-compress:1.26.2")
            classpath("org.bitbucket.b_c:jose4j:0.9.6")
            classpath("io.netty:netty-handler:4.1.111.Final")
            classpath("io.netty:netty-handler-proxy:4.1.111.Final")
            classpath("io.netty:netty-codec-http2:4.1.111.Final")
            classpath("org.bouncycastle:bcpkix-jdk18on:1.78.1")
            classpath("com.google.jimfs:jimfs:1.3.0")
            classpath("io.grpc:grpc-netty:1.65.0")
            classpath("com.google.guava:guava:32.0.1-jre")
        }
    }
}

plugins {
    id("io.github.gradle-nexus.publish-plugin") version "1.1.0"
    id "org.jlleitschuh.gradle.ktlint" version "12.1.0"
    id "io.gitlab.arturbosch.detekt" version "1.23.6"
    //id 'nl.neotech.plugin.rootcoverage' version '1.6.0'
    id "org.jetbrains.dokka" version "$dokka_version"
    id "org.jetbrains.kotlin.plugin.compose" version "$kotlin_version" apply false
}
/*
rootCoverage {
    buildVariant "debug"
    excludes.addAll(
            "models/*",
    )
    generateHtml true
    generateXml true
    executeAndroidTests false
    executeUnitTests true
    includeUnitTestResults true
    includeNoLocationClasses true
}
*/
apply from: "${rootDir}/scripts/publish-root.gradle"

subprojects {
    tasks.withType(Javadoc).all { enabled = false }
    apply plugin: "org.jlleitschuh.gradle.ktlint" // Version should be inherited from parent
    apply plugin: "io.gitlab.arturbosch.detekt"
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    // Optionally configure plugin
    ktlint {
        android = true
        version = "1.2.1"
    }
    configurations.all {
        resolutionStrategy {
            force("com.fasterxml.woodstox:woodstox-core:6.4.0")
            force("io.grpc:grpc-netty:1.65.0")
            force("com.google.guava:guava:32.0.1-jre")
            force("io.netty:netty-codec-http:4.1.111.Final")
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

tasks.register("runOnGitHub") {
    dependsOn(
            ":sdk:lint",
            ":ui:lint",
            ":sdk:ktlintCheck",
            ":ui:ktlintCheck",
            ":sdk:testDebugUnitTest",
            ":ui:testDebugUnitTest"
            // TODO: add UI tests once they are done
    )
    group = "custom"
    description = "\$ ./gradlew runOnGitHub # runs on GitHub Action"
}

tasks.dokkaHtmlMultiModule.configure {
    outputDirectory.set(file("$projectDir/docs"))
}