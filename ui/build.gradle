plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id "org.jetbrains.dokka"
}

ext {
    PUBLISH_GROUP_ID = 'com.stytch.sdk'
    PUBLISH_VERSION = '0.0.1'
    PUBLISH_ARTIFACT_ID = 'ui'
}

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"

android {
    namespace 'com.stytch.sdk.ui'
    compileSdk 34

    defaultConfig {
        minSdk 23
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.8'
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += '-Xexplicit-api=strict'
    }
    lint {
        disable 'OldTargetApi'
    }
    testVariants.all {
        it.mergedFlavor.manifestPlaceholders = [
            'stytchOAuthRedirectScheme': 'test://',
            'stytchOAuthRedirectHost': 'oauth',
            'STYTCH_UI_PUBLIC_TOKEN': 'test',
        ]
    }
    unitTestVariants.all {
        it.mergedFlavor.manifestPlaceholders = [
            'stytchOAuthRedirectScheme': 'test://',
            'stytchOAuthRedirectHost': 'oauth',
            'STYTCH_UI_PUBLIC_TOKEN': 'test',
        ]
    }
}

dependencies {
    def voyagerVersion = "1.0.0-rc06"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.activity:activity-ktx:1.7.2"
    implementation "androidx.core:core-ktx:1.10.1"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.1"
    implementation "androidx.activity:activity-compose:1.6.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1"
    implementation "cafe.adriel.voyager:voyager-navigator:$voyagerVersion"
    implementation "cafe.adriel.voyager:voyager-transitions:$voyagerVersion"
    implementation "cafe.adriel.voyager:voyager-androidx:$voyagerVersion"
    implementation platform('androidx.compose:compose-bom:2023.06.01')
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.ui:ui-graphics"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.material:material-icons-extended"
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"
    debugImplementation "androidx.compose.ui:ui-tooling"
    implementation "com.googlecode.libphonenumber:libphonenumber:8.12.52"
    api project(":sdk")
    testImplementation 'junit:junit:4.13.2'
    testImplementation "io.mockk:mockk:1.13.8"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.2'
    testImplementation("org.json:json:20230227")
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation "androidx.test:rules:1.5.0"
    androidTestImplementation "androidx.arch.core:core-testing:2.2.0"
    // Test rules and transitive dependencies:
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    // Needed for createAndroidComposeRule, but not createComposeRule:
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}

tasks.named("dokkaHtmlPartial").configure {
    dependencies {
        dokkaPlugin("org.jetbrains.dokka:versioning-plugin:$dokka_version")
    }
    moduleName.set("Stytch Android UI")
    suppressInheritedMembers.set(true)
    dokkaSourceSets {
        configureEach {
            includes.from([
                "module.md",
            ])
            perPackageOption {
                matchingRegex.set(".*\\.components.*")
                matchingRegex.set(".*\\.screens.*")
                matchingRegex.set(".*\\.theme.*")
                matchingRegex.set(".*\\.utils.*")
                suppress.set(true)
            }
            reportUndocumented.set(true)
        }
        /*
        // TODO: Switch to KTS files to make this a lot easier/more idiomatic
        pluginsMapConfiguration.set([
                "org.jetbrains.dokka.versioning.VersioningPlugin" : """{
                "version": "$PUBLISH_VERSION",
                "olderVersionsDir": "$projectDir/../../docs/docs/olderVersions/ui"
            }"""
        ])
         */
    }
}
